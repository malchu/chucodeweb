{"ast":null,"code":"var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"offset\", \"placeholder\", \"pad\", \"series\", \"size\"],\n  _excluded2 = [\"property\"],\n  _excluded3 = [\"property\", \"type\", \"x\", \"y\"],\n  _excluded4 = [\"property\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useContext, useMemo, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, largestSize, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n};\n\n// DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _boundsProp$y;\n  var a11yTitle = _ref.a11yTitle,\n    _ref$axis = _ref.axis,\n    axisProp = _ref$axis === void 0 ? true : _ref$axis,\n    _ref$bounds = _ref.bounds,\n    boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n    chartProp = _ref.chart,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    detail = _ref.detail,\n    _ref$gap = _ref.gap,\n    gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n    guideProp = _ref.guide,\n    legend = _ref.legend,\n    offset = _ref.offset,\n    placeholder = _ref.placeholder,\n    padProp = _ref.pad,\n    seriesProp = _ref.series,\n    size = _ref.size,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  // legend interaction, if any\n  var _useState = useState(),\n    activeProperty = _useState[0],\n    setActiveProperty = _useState[1];\n\n  // normalize seriesProp to an array of objects, one per property\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  };\n\n  // Normalize chartProp to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n  var charts = useMemo(function () {\n    if (!chartProp) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n      // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n    if (Array.isArray(chartProp)) return chartProp.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chartProp === 'string') return [{\n      property: chartProp\n    }];\n    if (chartProp) return [chartProp];\n    return [];\n  }, [chartProp, series]);\n\n  // map the series property values into their own arrays\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]);\n\n  // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n        property = _ref5.property,\n        type = _ref5.type;\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n            thickness = property.thickness,\n            x = property.x,\n            y = property.y,\n            y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n        return seriesValues[property];\n      }\n      return undefined;\n    });\n  }, [charts, data, seriesValues]);\n\n  // map granularities to work well with the number of data points we have\n  var granularities = useMemo(function () {\n    var medium;\n    // determine a good medium granularity that will align well with the\n    // length of the data\n    var steps = data.length - 1;\n    // special case property driven point charts\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: Math.min(data.length, 2),\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]);\n\n  // normalize axis to objects, convert granularity to a number\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n    if (result.y) {\n      if (!result.y.property && charts[0])\n        // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    }\n\n    // calculate number of entries based on granularity\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n        granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n        _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n      result.y.count = granularities.y[_granularity];\n    }\n    return result;\n  }, [axisProp, data, charts, granularities]);\n\n  // calculate axis, bounds, and thickness for each chart\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n        granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n        _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n      if (stackedChartType[type]) {\n        var _chartValues$index, _chartValues$index$;\n        // merge values for bars, areas, and lines cases\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      }\n      // if this is a data driven x chart, set coarseness for x\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n    if (typeof boundsProp === 'object') {\n      if (boundsProp.y) chartBounds = chartBounds.map(function (b) {\n        return [b[0], [].concat(boundsProp.y)];\n      });\n    }\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n        thickness = _charts$index.thickness,\n        type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]);\n\n  // normalize how we style data properties for use by Legend and Detail\n  var seriesStyles = useMemo(function () {\n    var result = {};\n    // start from what we were explicitly given\n    charts.forEach(function (chart, index) {\n      var calcThickness = chartProps[index].thickness;\n      if (typeof chart.property === 'object' && !Array.isArray(chart.property)) {\n        // data driven point chart\n        Object.keys(chart.property).forEach(function (aspect) {\n          var prop = chart.property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var setPropertyStyle = function setPropertyStyle(_ref6) {\n          var property = _ref6.property,\n            styles = _objectWithoutPropertiesLoose(_ref6, _excluded2);\n          // keep what we've got, use what is new\n          result[property] = _extends({}, styles, result[property] || {});\n          // unless the new style is has no opacity\n          if (!styles.opacity) delete result[property].opacity;\n          if (styles.type === 'point') result[property].point = false;\n          if (calcThickness && !result[property].thickness) result[property].thickness = calcThickness;\n        };\n        if (Array.isArray(chart.property)) chart.property.forEach(function (prop) {\n          if (typeof prop === 'string') setPropertyStyle(_extends({}, chart, {\n            property: prop\n          }));else if (typeof prop === 'object') setPropertyStyle(_extends({}, chart, prop));\n        });else if (typeof chart === 'object') setPropertyStyle(chart);else if (typeof chart === 'string') setPropertyStyle({\n          property: chart\n        });\n      }\n    });\n\n    // set color for any non-aspect properties we don't have one for yet\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      }\n      // set opacity if it isn't set and this isn't the active property\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]);\n\n  // normalize guide\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    }\n    // set counts\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n    return result;\n  }, [axis, granularities, guideProp]);\n\n  // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = largestSize(result.horizontal, halfPad[thickness]);\n      if (type && type !== 'bar') result.vertical = largestSize(result.vertical, halfPad[thickness]);\n    });\n    return result;\n  }, [chartProps, charts, padProp]);\n\n  // calculate the thickness in pixels of each chart\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]);\n\n  // normalize any offset gap\n  var offsetGap = useMemo(function () {\n    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;\n  }, [offset, theme]);\n\n  // calculate the offset for each chart, which is a sum of the thicknesses\n  // any offset gaps that preceded it\n  var offsets = useMemo(function () {\n    if (offset) {\n      return thicknesses.map(function (t, i) {\n        return thicknesses.slice(0, i).reduce(function (a, b) {\n          return a + b + offsetGap;\n        }, 0);\n      });\n    }\n    return undefined;\n  }, [offset, offsetGap, thicknesses]);\n\n  // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n  var offsetPad = useMemo(function () {\n    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + \"px\" : undefined;\n  }, [offsets, thicknesses]);\n\n  // The thickness of the segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n  var segmentThickness = useMemo(function () {\n    var result = 0;\n    charts.forEach(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n    });\n    return result + \"px\";\n  }, [charts, chartProps, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n        render = _ref8.render;\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]);\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n    return value;\n  };\n\n  // TODO: revisit how x/y axis are hooked up to charts and series\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    axis: axis,\n    values: (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[0],\n    pad: offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    thickness: segmentThickness,\n    serie: axis.x.property && getPropertySeries(axis.x.property),\n    style: offsetPad ? {\n      transform: \"translate(\" + offsets[Math.floor(offsets.length / 2)] + \"px, 0px)\"\n    } : {},\n    theme: theme\n  }) : null;\n  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    values: (boundsProp == null ? void 0 : (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[1],\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n      type = _ref9.type,\n      x = _ref9.x,\n      y = _ref9.y,\n      chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n    // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n          property = _ref10.property,\n          propRest = _objectWithoutPropertiesLoose(_ref10, _excluded4);\n        return /*#__PURE__*/React.createElement(Chart\n        // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j\n          // when property name isn't valid, send empty array\n          ,\n\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n    return /*#__PURE__*/React.createElement(Chart\n    // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), placeholder && (typeof placeholder === 'string' && /*#__PURE__*/React.createElement(Box, {\n    fill: \"vertical\",\n    align: \"center\",\n    justify: \"center\",\n    background: {\n      color: 'background-front',\n      opacity: 'strong'\n    },\n    margin: pad\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text-weak\"\n  }, placeholder)) || placeholder), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: segmentThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null;\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };","map":{"version":3,"names":["_excluded","_excluded2","_excluded3","_excluded4","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","useMemo","useState","ThemeContext","Box","Chart","calcs","calcBounds","Grid","Stack","Text","parseMetricToNum","Detail","Legend","XAxis","YAxis","XGuide","YGuide","createDateFormat","halfPad","heightYGranularity","largestSize","points","DataChartPropTypes","stackedChartType","areas","bars","lines","DataChart","_ref","ref","_boundsProp$y","a11yTitle","_ref$axis","axis","axisProp","_ref$bounds","bounds","boundsProp","chartProp","chart","_ref$data","data","detail","_ref$gap","gap","guideProp","guide","legend","offset","placeholder","padProp","pad","seriesProp","series","size","rest","theme","defaultProps","_useState","activeProperty","setActiveProperty","Array","isArray","filter","s","property","map","getPropertySeries","prop","find","_ref2","charts","slice","c","_ref3","seriesValues","result","forEach","_ref4","d","chartValues","_ref5","opacity","type","totals","cp","aProperty","values","undefined","v","base","_","index","concat","p","color","thickness","x","y","y2","value","aValue","push","t","transform","granularities","medium","steps","coarse","Math","min","fine","height","date","time","granularity","_result$x$granularity","count","_result$y$granularity","_granularity","chartProps","coarseness","_axis$x$granularity","_axis$y$granularity","_granularity2","chartBounds","_chartValues$index","_chartValues$index$","mergedValues","__","max","alignedBounds","b","_charts$index","calcValues","seriesStyles","calcThickness","aspect","setPropertyStyle","_ref6","styles","point","colorIndex","pointIndex","seriesStyle","_ref7","horizontal","vertical","thicknesses","global","edgeSize","offsetGap","offsets","reduce","a","offsetPad","segmentThickness","dateFormats","full","_ref8","render","renderValue","serie","dataIndex","valueArg","datum","dateFormat","Date","prefix","suffix","xAxisElement","createElement","end","style","floor","yAxisElement","reverse","stackFill","width","guidingChild","stackElement","gridArea","fill","_ref9","chartRest","chartPad","offsetProps","cProp","j","pProp","_ref10","propRest","overflow","align","justify","background","margin","legendElement","content","columns","rows","name","start","displayName","propTypes"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/components/DataChart/DataChart.js"],"sourcesContent":["var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"offset\", \"placeholder\", \"pad\", \"series\", \"size\"],\n  _excluded2 = [\"property\"],\n  _excluded3 = [\"property\", \"type\", \"x\", \"y\"],\n  _excluded4 = [\"property\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { forwardRef, useContext, useMemo, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, largestSize, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n};\n\n// DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _boundsProp$y;\n  var a11yTitle = _ref.a11yTitle,\n    _ref$axis = _ref.axis,\n    axisProp = _ref$axis === void 0 ? true : _ref$axis,\n    _ref$bounds = _ref.bounds,\n    boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n    chartProp = _ref.chart,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    detail = _ref.detail,\n    _ref$gap = _ref.gap,\n    gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n    guideProp = _ref.guide,\n    legend = _ref.legend,\n    offset = _ref.offset,\n    placeholder = _ref.placeholder,\n    padProp = _ref.pad,\n    seriesProp = _ref.series,\n    size = _ref.size,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  // legend interaction, if any\n  var _useState = useState(),\n    activeProperty = _useState[0],\n    setActiveProperty = _useState[1];\n\n  // normalize seriesProp to an array of objects, one per property\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  };\n\n  // Normalize chartProp to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n  var charts = useMemo(function () {\n    if (!chartProp) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n      // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n    if (Array.isArray(chartProp)) return chartProp.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chartProp === 'string') return [{\n      property: chartProp\n    }];\n    if (chartProp) return [chartProp];\n    return [];\n  }, [chartProp, series]);\n\n  // map the series property values into their own arrays\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]);\n\n  // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n        property = _ref5.property,\n        type = _ref5.type;\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n            thickness = property.thickness,\n            x = property.x,\n            y = property.y,\n            y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n        return seriesValues[property];\n      }\n      return undefined;\n    });\n  }, [charts, data, seriesValues]);\n\n  // map granularities to work well with the number of data points we have\n  var granularities = useMemo(function () {\n    var medium;\n    // determine a good medium granularity that will align well with the\n    // length of the data\n    var steps = data.length - 1;\n    // special case property driven point charts\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: Math.min(data.length, 2),\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]);\n\n  // normalize axis to objects, convert granularity to a number\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n    if (result.y) {\n      if (!result.y.property && charts[0])\n        // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    }\n\n    // calculate number of entries based on granularity\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n        granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n        _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n      result.y.count = granularities.y[_granularity];\n    }\n    return result;\n  }, [axisProp, data, charts, granularities]);\n\n  // calculate axis, bounds, and thickness for each chart\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n        granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n        _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n      if (stackedChartType[type]) {\n        var _chartValues$index, _chartValues$index$;\n        // merge values for bars, areas, and lines cases\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      }\n      // if this is a data driven x chart, set coarseness for x\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n    if (typeof boundsProp === 'object') {\n      if (boundsProp.y) chartBounds = chartBounds.map(function (b) {\n        return [b[0], [].concat(boundsProp.y)];\n      });\n    }\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n        thickness = _charts$index.thickness,\n        type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]);\n\n  // normalize how we style data properties for use by Legend and Detail\n  var seriesStyles = useMemo(function () {\n    var result = {};\n    // start from what we were explicitly given\n    charts.forEach(function (chart, index) {\n      var calcThickness = chartProps[index].thickness;\n      if (typeof chart.property === 'object' && !Array.isArray(chart.property)) {\n        // data driven point chart\n        Object.keys(chart.property).forEach(function (aspect) {\n          var prop = chart.property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var setPropertyStyle = function setPropertyStyle(_ref6) {\n          var property = _ref6.property,\n            styles = _objectWithoutPropertiesLoose(_ref6, _excluded2);\n          // keep what we've got, use what is new\n          result[property] = _extends({}, styles, result[property] || {});\n          // unless the new style is has no opacity\n          if (!styles.opacity) delete result[property].opacity;\n          if (styles.type === 'point') result[property].point = false;\n          if (calcThickness && !result[property].thickness) result[property].thickness = calcThickness;\n        };\n        if (Array.isArray(chart.property)) chart.property.forEach(function (prop) {\n          if (typeof prop === 'string') setPropertyStyle(_extends({}, chart, {\n            property: prop\n          }));else if (typeof prop === 'object') setPropertyStyle(_extends({}, chart, prop));\n        });else if (typeof chart === 'object') setPropertyStyle(chart);else if (typeof chart === 'string') setPropertyStyle({\n          property: chart\n        });\n      }\n    });\n\n    // set color for any non-aspect properties we don't have one for yet\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      }\n      // set opacity if it isn't set and this isn't the active property\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]);\n\n  // normalize guide\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    }\n    // set counts\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n    return result;\n  }, [axis, granularities, guideProp]);\n\n  // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = largestSize(result.horizontal, halfPad[thickness]);\n      if (type && type !== 'bar') result.vertical = largestSize(result.vertical, halfPad[thickness]);\n    });\n    return result;\n  }, [chartProps, charts, padProp]);\n\n  // calculate the thickness in pixels of each chart\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]);\n\n  // normalize any offset gap\n  var offsetGap = useMemo(function () {\n    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;\n  }, [offset, theme]);\n\n  // calculate the offset for each chart, which is a sum of the thicknesses\n  // any offset gaps that preceded it\n  var offsets = useMemo(function () {\n    if (offset) {\n      return thicknesses.map(function (t, i) {\n        return thicknesses.slice(0, i).reduce(function (a, b) {\n          return a + b + offsetGap;\n        }, 0);\n      });\n    }\n    return undefined;\n  }, [offset, offsetGap, thicknesses]);\n\n  // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n  var offsetPad = useMemo(function () {\n    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + \"px\" : undefined;\n  }, [offsets, thicknesses]);\n\n  // The thickness of the segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n  var segmentThickness = useMemo(function () {\n    var result = 0;\n    charts.forEach(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n    });\n    return result + \"px\";\n  }, [charts, chartProps, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n        render = _ref8.render;\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]);\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n    return value;\n  };\n\n  // TODO: revisit how x/y axis are hooked up to charts and series\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    axis: axis,\n    values: (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[0],\n    pad: offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    thickness: segmentThickness,\n    serie: axis.x.property && getPropertySeries(axis.x.property),\n    style: offsetPad ? {\n      transform: \"translate(\" + offsets[Math.floor(offsets.length / 2)] + \"px, 0px)\"\n    } : {},\n    theme: theme\n  }) : null;\n  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    values: (boundsProp == null ? void 0 : (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[1],\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n      type = _ref9.type,\n      x = _ref9.x,\n      y = _ref9.y,\n      chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n    // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n          property = _ref10.property,\n          propRest = _objectWithoutPropertiesLoose(_ref10, _excluded4);\n        return /*#__PURE__*/React.createElement(Chart\n        // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j\n          // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n    return /*#__PURE__*/React.createElement(Chart\n    // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), placeholder && (typeof placeholder === 'string' && /*#__PURE__*/React.createElement(Box, {\n    fill: \"vertical\",\n    align: \"center\",\n    justify: \"center\",\n    background: {\n      color: 'background-front',\n      opacity: 'strong'\n    },\n    margin: pad\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text-weak\"\n  }, placeholder)) || placeholder), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: segmentThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null;\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}