{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malch\\\\OneDrive\\\\Documents\\\\Projects\\\\ChuCode\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  plugins: {\n    title: {\n      display: true,\n      text: 'LeetCode Category Summary'\n    }\n  },\n  responsive: true,\n  scales: {\n    x: {\n      stacked: true\n    },\n    y: {\n      stacked: true\n    }\n  }\n};\nconst labels = ['Arrays & Hashing', 'Two Pointers', 'Sliding Window', 'Stack', 'Binary Search', 'Linked List', 'Trees'];\nexport function Dashboard() {\n  _s();\n  // Fields\n  const [listOfProblems, setListOfProblems] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  var curr = new Date();\n  curr.setDate(curr.getDate() + 3);\n  var defaultDate = curr.toISOString().substring(0, 10);\n  const [date, setDate] = useState(defaultDate);\n  const [duration, setDuration] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [completed, setCompleted] = useState(\"\");\n\n  // retrieve data from MongoDB\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getProblems\").then(response => {\n      setListOfProblems(response.data);\n    });\n  }, []);\n\n  // functions\n  const createProblem = () => {\n    Axios.post(\"http://localhost:3001/createProblem\", {\n      name,\n      difficulty,\n      date,\n      duration,\n      attempts,\n      completed\n    }).then(response => {\n      setListOfProblems([...listOfProblems, {\n        name,\n        difficulty,\n        date,\n        duration,\n        attempts,\n        completed\n      }]);\n    });\n  };\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Easy',\n      data: labels.map(() => 10),\n      backgroundColor: 'rgb(0, 255, 136)'\n    }, {\n      label: 'Medium',\n      data: labels.map(() => 20),\n      backgroundColor: 'rgb(231, 168, 50)'\n    }, {\n      label: 'Hard',\n      data: labels.map(() => 15),\n      backgroundColor: 'red'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 26\n    }, this), listOfProblems.map(problem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", problem.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Difficulty: \", problem.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", problem.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Duration: \", problem.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Attempts: \", problem.attempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Completed: \", problem.completed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n}\n_s(Dashboard, \"BJQyXVRB6UxC7NH1mQ4kmJt0kNA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","useState","useEffect","Axios","register","options","plugins","title","display","text","responsive","scales","x","stacked","y","labels","Dashboard","listOfProblems","setListOfProblems","name","setName","difficulty","setDifficulty","curr","Date","setDate","getDate","defaultDate","toISOString","substring","date","duration","setDuration","attempts","setAttempts","completed","setCompleted","get","then","response","data","createProblem","post","datasets","label","map","backgroundColor","problem"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/ChuCode/client/src/Pages/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: 'LeetCode Category Summary',\r\n    },\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      stacked: true,\r\n    },\r\n    y: {\r\n      stacked: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Arrays & Hashing', 'Two Pointers', 'Sliding Window', 'Stack', 'Binary Search', 'Linked List', 'Trees'];\r\n\r\nexport function Dashboard() {\r\n  // Fields\r\n  const [listOfProblems, setListOfProblems] = useState([])\r\n  const [name, setName] = useState(\"\")\r\n  const [difficulty, setDifficulty] = useState(\"\")\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var defaultDate = curr.toISOString().substring(0,10);\r\n  const [date, setDate] = useState(defaultDate)\r\n  const [duration, setDuration] = useState(0)\r\n  const [attempts, setAttempts] = useState(0)\r\n  const [completed, setCompleted] = useState(\"\")  \r\n\r\n  // retrieve data from MongoDB\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getProblems\").then((response) => {\r\n      setListOfProblems(response.data)\r\n    });\r\n  }, [])\r\n\r\n  // functions\r\n  const createProblem = () => {\r\n    Axios.post(\"http://localhost:3001/createProblem\", {\r\n      name, \r\n      difficulty, \r\n      date,\r\n      duration,\r\n      attempts,\r\n      completed,\r\n    }).then((response) => {\r\n      setListOfProblems([...listOfProblems, {\r\n        name, \r\n        difficulty, \r\n        date,\r\n        duration,\r\n        attempts,\r\n        completed,\r\n      }])\r\n    })\r\n  }\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Easy',\r\n        data: labels.map(() => 10),\r\n        backgroundColor: 'rgb(0, 255, 136)',\r\n      },\r\n      {\r\n        label: 'Medium',\r\n        data: labels.map(() => 20),\r\n        backgroundColor: 'rgb(231, 168, 50)',\r\n      },\r\n      {\r\n        label: 'Hard',\r\n        data: labels.map(() => 15),\r\n        backgroundColor: 'red',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <div id='chart'><Bar options={options} data={data} />{listOfProblems.map((problem) => {\r\n    return (\r\n      <div className='container'>\r\n        <div className='card'>\r\n          <p>Name: {problem.name}</p>\r\n          <p>Difficulty: {problem.difficulty}</p>\r\n          <p>Date: {problem.date}</p>\r\n          <p>Duration: {problem.duration}</p>\r\n          <p>Attempts: {problem.attempts}</p>\r\n          <p>Completed: {problem.completed}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  })}</div>;\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}