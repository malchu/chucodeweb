{"ast":null,"code":"var _excluded = [\"connections\"],\n  _excluded2 = [\"anchor\", \"animation\", \"color\", \"offset\", \"round\", \"thickness\", \"type\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { normalizeColor, parseMetricToNum, useForwardedRef } from '../../utils';\nimport { StyledDiagram } from './StyledDiagram';\nimport { DiagramPropTypes } from './propTypes';\nvar computeMidPoint = function computeMidPoint(fromPoint, toPoint) {\n  return [fromPoint[0] > toPoint[0] ? toPoint[0] + (fromPoint[0] - toPoint[0]) / 2 : fromPoint[0] + (toPoint[0] - fromPoint[0]) / 2, fromPoint[1] > toPoint[1] ? toPoint[1] + (fromPoint[1] - toPoint[1]) / 2 : fromPoint[1] + (toPoint[1] - fromPoint[1]) / 2];\n};\nvar COMMANDS = {\n  curved: function curved(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n    if (anchor === 'horizontal') {\n      cmds += \"Q \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"Q \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    }\n    cmds += \"T \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  },\n  direct: function direct(fromPoint, toPoint, offset) {\n    return \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset));\n  },\n  rectilinear: function rectilinear(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n    if (anchor === 'horizontal') {\n      cmds += \"L \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (midPoint[0] + offset) + \",\" + (toPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"L \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \");\n    }\n    cmds += \"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  }\n};\nvar findTarget = function findTarget(target) {\n  if (typeof target === 'string') {\n    return document.getElementById(target);\n  }\n  return target;\n};\nvar Diagram = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var connections = _ref.connections,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var _useState = useState({\n      width: 0,\n      height: 0\n    }),\n    dimensions = _useState[0],\n    setDimensions = _useState[1];\n  var _useState2 = useState(),\n    connectionPoints = _useState2[0],\n    setConnectionPoints = _useState2[1];\n  var svgRef = useForwardedRef(ref);\n  useEffect(function () {\n    setConnectionPoints(undefined);\n  }, [connections]);\n  var onResize = useCallback(function () {\n    var svg = svgRef.current;\n    if (svg) {\n      var rect = svg.getBoundingClientRect();\n      if (rect.width !== dimensions.width || rect.height !== dimensions.height) {\n        setDimensions({\n          width: rect.width,\n          height: rect.height\n        });\n        setConnectionPoints(undefined);\n      }\n    }\n  }, [dimensions.width, dimensions.height, svgRef]);\n\n  // Ref that stores resize handler\n  var savedOnResize = useRef();\n\n  // Update resize ref value if onResize changes.\n  // This allows our effect below to always get latest handler\n  useEffect(function () {\n    savedOnResize.current = onResize;\n  }, [onResize]);\n  useEffect(function () {\n    var onResizeHandler = function onResizeHandler(event) {\n      return savedOnResize.current(event);\n    };\n    onResizeHandler();\n    window.addEventListener('resize', onResizeHandler);\n    return function () {\n      window.removeEventListener('resize', onResizeHandler);\n    };\n  }, []);\n  var placeConnections = useCallback(function () {\n    var containerRect = svgRef.current.getBoundingClientRect();\n    var updatedConnectionPoints = connections.map(function (_ref2) {\n      var anchor = _ref2.anchor,\n        fromTarget = _ref2.fromTarget,\n        toTarget = _ref2.toTarget;\n      var points;\n      var fromElement = findTarget(fromTarget);\n      var toElement = findTarget(toTarget);\n      if (!fromElement) {\n        console.warn(\"Diagram cannot find \" + fromTarget);\n      }\n      if (!toElement) {\n        console.warn(\"Diagram cannot find \" + toTarget);\n      }\n      if (fromElement && toElement) {\n        var fromRect = fromElement.getBoundingClientRect();\n        var toRect = toElement.getBoundingClientRect();\n        // There is no x and y when unit testing.\n        var fromPoint = [fromRect.left - containerRect.left || 0, fromRect.top - containerRect.top || 0];\n        var toPoint = [toRect.left - containerRect.left || 0, toRect.top - containerRect.top || 0];\n        if (anchor === 'vertical') {\n          fromPoint[0] += fromRect.width / 2;\n          toPoint[0] += toRect.width / 2;\n          if (fromRect.top < toRect.top) {\n            fromPoint[1] += fromRect.height;\n          } else {\n            toPoint[1] += toRect.height;\n          }\n        } else if (anchor === 'horizontal') {\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[1] += toRect.height / 2;\n          if (fromRect.left < toRect.left) {\n            fromPoint[0] += fromRect.width;\n          } else {\n            toPoint[0] += toRect.width;\n          }\n        } else {\n          // center\n          fromPoint[0] += fromRect.width / 2;\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[0] += toRect.width / 2;\n          toPoint[1] += toRect.height / 2;\n        }\n        points = [fromPoint, toPoint];\n      }\n      return points;\n    });\n    setConnectionPoints(updatedConnectionPoints);\n  }, [connections, svgRef]);\n  useEffect(function () {\n    if (!connectionPoints) {\n      placeConnections();\n    }\n  }, [connectionPoints, placeConnections]);\n  var paths;\n  if (connectionPoints) {\n    paths = connections.map(function (_ref3, index) {\n      var anchor = _ref3.anchor,\n        animation = _ref3.animation,\n        color = _ref3.color,\n        offset = _ref3.offset,\n        round = _ref3.round,\n        thickness = _ref3.thickness,\n        type = _ref3.type,\n        connectionRest = _objectWithoutPropertiesLoose(_ref3, _excluded2);\n      var path;\n      var cleanedRest = _extends({}, connectionRest);\n      delete cleanedRest.fromTarget;\n      delete cleanedRest.toTarget;\n      var points = connectionPoints[index];\n      if (points) {\n        var offsetWidth = offset ? parseMetricToNum(theme.global.edgeSize[offset]) : 0;\n        var d = COMMANDS[type || 'curved'](points[0], points[1], offsetWidth, anchor);\n        var strokeWidth = thickness ? parseMetricToNum(theme.global.edgeSize[thickness] || thickness) : 1;\n        var colorName = color || theme.diagram.line && theme.diagram.line.color;\n        if (!colorName) {\n          var colors = Object.keys(theme.global.colors).filter(function (n) {\n            return n.match(/^graph-[0-9]$/);\n          });\n          colorName = colors[index % colors.length];\n        }\n        path = /*#__PURE__*/React.createElement(\"path\", _extends({\n          // eslint-disable-next-line react/no-array-index-key\n          key: index\n          // eslint-disable-next-line react/no-unknown-property\n          ,\n\n          animation: animation\n        }, cleanedRest, {\n          stroke: normalizeColor(colorName, theme),\n          strokeWidth: strokeWidth,\n          strokeLinecap: round ? 'round' : 'butt',\n          strokeLinejoin: round ? 'round' : 'miter',\n          fill: \"none\",\n          d: d\n        }));\n      }\n      return path;\n    });\n  }\n  return /*#__PURE__*/React.createElement(StyledDiagram, _extends({\n    ref: svgRef,\n    viewBox: \"0 0 \" + dimensions.width + \" \" + dimensions.height,\n    preserveAspectRatio: \"xMinYMin meet\",\n    connections: paths\n  }, rest), /*#__PURE__*/React.createElement(\"g\", null, paths));\n});\nDiagram.displayName = 'Diagram';\nDiagram.defaultProps = {\n  connections: []\n};\nDiagram.propTypes = DiagramPropTypes;\nexport { Diagram };","map":{"version":3,"names":["_excluded","_excluded2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useCallback","useContext","useEffect","useRef","useState","ThemeContext","defaultProps","normalizeColor","parseMetricToNum","useForwardedRef","StyledDiagram","DiagramPropTypes","computeMidPoint","fromPoint","toPoint","COMMANDS","curved","offset","anchor","midPoint","cmds","direct","rectilinear","findTarget","document","getElementById","Diagram","_ref","ref","connections","rest","theme","_useState","width","height","dimensions","setDimensions","_useState2","connectionPoints","setConnectionPoints","svgRef","undefined","onResize","svg","current","rect","getBoundingClientRect","savedOnResize","onResizeHandler","event","window","addEventListener","removeEventListener","placeConnections","containerRect","updatedConnectionPoints","map","_ref2","fromTarget","toTarget","points","fromElement","toElement","console","warn","fromRect","toRect","left","top","paths","_ref3","index","animation","color","round","thickness","type","connectionRest","path","cleanedRest","offsetWidth","global","edgeSize","d","strokeWidth","colorName","diagram","line","colors","filter","n","match","createElement","stroke","strokeLinecap","strokeLinejoin","fill","viewBox","preserveAspectRatio","displayName","propTypes"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/components/Diagram/Diagram.js"],"sourcesContent":["var _excluded = [\"connections\"],\n  _excluded2 = [\"anchor\", \"animation\", \"color\", \"offset\", \"round\", \"thickness\", \"type\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { forwardRef, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { normalizeColor, parseMetricToNum, useForwardedRef } from '../../utils';\nimport { StyledDiagram } from './StyledDiagram';\nimport { DiagramPropTypes } from './propTypes';\nvar computeMidPoint = function computeMidPoint(fromPoint, toPoint) {\n  return [fromPoint[0] > toPoint[0] ? toPoint[0] + (fromPoint[0] - toPoint[0]) / 2 : fromPoint[0] + (toPoint[0] - fromPoint[0]) / 2, fromPoint[1] > toPoint[1] ? toPoint[1] + (fromPoint[1] - toPoint[1]) / 2 : fromPoint[1] + (toPoint[1] - fromPoint[1]) / 2];\n};\nvar COMMANDS = {\n  curved: function curved(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n    if (anchor === 'horizontal') {\n      cmds += \"Q \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"Q \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (midPoint[0] + offset + \",\" + (midPoint[1] + offset) + \" \");\n    }\n    cmds += \"T \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  },\n  direct: function direct(fromPoint, toPoint, offset) {\n    return \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset));\n  },\n  rectilinear: function rectilinear(fromPoint, toPoint, offset, anchor) {\n    var midPoint = computeMidPoint(fromPoint, toPoint);\n    var cmds = \"M \" + (fromPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \";\n    if (anchor === 'horizontal') {\n      cmds += \"L \" + (midPoint[0] + offset) + \",\" + (fromPoint[1] + offset) + \" \" + (\"L \" + (midPoint[0] + offset) + \",\" + (toPoint[1] + offset) + \" \");\n    } else {\n      cmds += \"L \" + (fromPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \" + (\"L \" + (toPoint[0] + offset) + \",\" + (midPoint[1] + offset) + \" \");\n    }\n    cmds += \"L \" + (toPoint[0] + offset) + \",\" + (toPoint[1] + offset);\n    return cmds;\n  }\n};\nvar findTarget = function findTarget(target) {\n  if (typeof target === 'string') {\n    return document.getElementById(target);\n  }\n  return target;\n};\nvar Diagram = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var connections = _ref.connections,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var _useState = useState({\n      width: 0,\n      height: 0\n    }),\n    dimensions = _useState[0],\n    setDimensions = _useState[1];\n  var _useState2 = useState(),\n    connectionPoints = _useState2[0],\n    setConnectionPoints = _useState2[1];\n  var svgRef = useForwardedRef(ref);\n  useEffect(function () {\n    setConnectionPoints(undefined);\n  }, [connections]);\n  var onResize = useCallback(function () {\n    var svg = svgRef.current;\n    if (svg) {\n      var rect = svg.getBoundingClientRect();\n      if (rect.width !== dimensions.width || rect.height !== dimensions.height) {\n        setDimensions({\n          width: rect.width,\n          height: rect.height\n        });\n        setConnectionPoints(undefined);\n      }\n    }\n  }, [dimensions.width, dimensions.height, svgRef]);\n\n  // Ref that stores resize handler\n  var savedOnResize = useRef();\n\n  // Update resize ref value if onResize changes.\n  // This allows our effect below to always get latest handler\n  useEffect(function () {\n    savedOnResize.current = onResize;\n  }, [onResize]);\n  useEffect(function () {\n    var onResizeHandler = function onResizeHandler(event) {\n      return savedOnResize.current(event);\n    };\n    onResizeHandler();\n    window.addEventListener('resize', onResizeHandler);\n    return function () {\n      window.removeEventListener('resize', onResizeHandler);\n    };\n  }, []);\n  var placeConnections = useCallback(function () {\n    var containerRect = svgRef.current.getBoundingClientRect();\n    var updatedConnectionPoints = connections.map(function (_ref2) {\n      var anchor = _ref2.anchor,\n        fromTarget = _ref2.fromTarget,\n        toTarget = _ref2.toTarget;\n      var points;\n      var fromElement = findTarget(fromTarget);\n      var toElement = findTarget(toTarget);\n      if (!fromElement) {\n        console.warn(\"Diagram cannot find \" + fromTarget);\n      }\n      if (!toElement) {\n        console.warn(\"Diagram cannot find \" + toTarget);\n      }\n      if (fromElement && toElement) {\n        var fromRect = fromElement.getBoundingClientRect();\n        var toRect = toElement.getBoundingClientRect();\n        // There is no x and y when unit testing.\n        var fromPoint = [fromRect.left - containerRect.left || 0, fromRect.top - containerRect.top || 0];\n        var toPoint = [toRect.left - containerRect.left || 0, toRect.top - containerRect.top || 0];\n        if (anchor === 'vertical') {\n          fromPoint[0] += fromRect.width / 2;\n          toPoint[0] += toRect.width / 2;\n          if (fromRect.top < toRect.top) {\n            fromPoint[1] += fromRect.height;\n          } else {\n            toPoint[1] += toRect.height;\n          }\n        } else if (anchor === 'horizontal') {\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[1] += toRect.height / 2;\n          if (fromRect.left < toRect.left) {\n            fromPoint[0] += fromRect.width;\n          } else {\n            toPoint[0] += toRect.width;\n          }\n        } else {\n          // center\n          fromPoint[0] += fromRect.width / 2;\n          fromPoint[1] += fromRect.height / 2;\n          toPoint[0] += toRect.width / 2;\n          toPoint[1] += toRect.height / 2;\n        }\n        points = [fromPoint, toPoint];\n      }\n      return points;\n    });\n    setConnectionPoints(updatedConnectionPoints);\n  }, [connections, svgRef]);\n  useEffect(function () {\n    if (!connectionPoints) {\n      placeConnections();\n    }\n  }, [connectionPoints, placeConnections]);\n  var paths;\n  if (connectionPoints) {\n    paths = connections.map(function (_ref3, index) {\n      var anchor = _ref3.anchor,\n        animation = _ref3.animation,\n        color = _ref3.color,\n        offset = _ref3.offset,\n        round = _ref3.round,\n        thickness = _ref3.thickness,\n        type = _ref3.type,\n        connectionRest = _objectWithoutPropertiesLoose(_ref3, _excluded2);\n      var path;\n      var cleanedRest = _extends({}, connectionRest);\n      delete cleanedRest.fromTarget;\n      delete cleanedRest.toTarget;\n      var points = connectionPoints[index];\n      if (points) {\n        var offsetWidth = offset ? parseMetricToNum(theme.global.edgeSize[offset]) : 0;\n        var d = COMMANDS[type || 'curved'](points[0], points[1], offsetWidth, anchor);\n        var strokeWidth = thickness ? parseMetricToNum(theme.global.edgeSize[thickness] || thickness) : 1;\n        var colorName = color || theme.diagram.line && theme.diagram.line.color;\n        if (!colorName) {\n          var colors = Object.keys(theme.global.colors).filter(function (n) {\n            return n.match(/^graph-[0-9]$/);\n          });\n          colorName = colors[index % colors.length];\n        }\n        path = /*#__PURE__*/React.createElement(\"path\", _extends({\n          // eslint-disable-next-line react/no-array-index-key\n          key: index\n          // eslint-disable-next-line react/no-unknown-property\n          ,\n          animation: animation\n        }, cleanedRest, {\n          stroke: normalizeColor(colorName, theme),\n          strokeWidth: strokeWidth,\n          strokeLinecap: round ? 'round' : 'butt',\n          strokeLinejoin: round ? 'round' : 'miter',\n          fill: \"none\",\n          d: d\n        }));\n      }\n      return path;\n    });\n  }\n  return /*#__PURE__*/React.createElement(StyledDiagram, _extends({\n    ref: svgRef,\n    viewBox: \"0 0 \" + dimensions.width + \" \" + dimensions.height,\n    preserveAspectRatio: \"xMinYMin meet\",\n    connections: paths\n  }, rest), /*#__PURE__*/React.createElement(\"g\", null, paths));\n});\nDiagram.displayName = 'Diagram';\nDiagram.defaultProps = {\n  connections: []\n};\nDiagram.propTypes = DiagramPropTypes;\nexport { Diagram };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}