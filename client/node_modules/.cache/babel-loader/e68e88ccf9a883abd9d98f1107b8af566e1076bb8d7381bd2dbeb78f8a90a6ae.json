{"ast":null,"code":"import React from 'react';\nimport { AnnounceContextPropTypes } from './propTypes';\nvar createAnnouncer = function createAnnouncer() {\n  var announcer = document.createElement('div');\n  announcer.id = 'grommet-announcer';\n  announcer.style.left = '-100%';\n  announcer.style.right = '100%';\n  announcer.style.position = 'fixed';\n  announcer.style['z-index'] = '-1';\n  document.body.insertBefore(announcer, document.body.firstChild);\n  return announcer;\n};\nexport var AnnounceContext = /*#__PURE__*/React.createContext(function (message, mode, timeout) {\n  if (mode === void 0) {\n    mode = 'polite';\n  }\n  if (timeout === void 0) {\n    timeout = 500;\n  }\n  // we only create a new container if we don't have one already\n  // we create a separate node so that grommet does not set aria-hidden to it\n  var announcer = document.body.querySelector(\"#grommet-announcer[aria-live]\") || createAnnouncer();\n  announcer.setAttribute('aria-live', 'off');\n  announcer.innerHTML = message;\n  announcer.setAttribute('aria-live', mode);\n  setTimeout(function () {\n    announcer.innerHTML = '';\n  }, timeout);\n});\nAnnounceContext.propTypes = AnnounceContextPropTypes;","map":{"version":3,"names":["React","AnnounceContextPropTypes","createAnnouncer","announcer","document","createElement","id","style","left","right","position","body","insertBefore","firstChild","AnnounceContext","createContext","message","mode","timeout","querySelector","setAttribute","innerHTML","setTimeout","propTypes"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js"],"sourcesContent":["import React from 'react';\nimport { AnnounceContextPropTypes } from './propTypes';\nvar createAnnouncer = function createAnnouncer() {\n  var announcer = document.createElement('div');\n  announcer.id = 'grommet-announcer';\n  announcer.style.left = '-100%';\n  announcer.style.right = '100%';\n  announcer.style.position = 'fixed';\n  announcer.style['z-index'] = '-1';\n  document.body.insertBefore(announcer, document.body.firstChild);\n  return announcer;\n};\nexport var AnnounceContext = /*#__PURE__*/React.createContext(function (message, mode, timeout) {\n  if (mode === void 0) {\n    mode = 'polite';\n  }\n  if (timeout === void 0) {\n    timeout = 500;\n  }\n  // we only create a new container if we don't have one already\n  // we create a separate node so that grommet does not set aria-hidden to it\n  var announcer = document.body.querySelector(\"#grommet-announcer[aria-live]\") || createAnnouncer();\n  announcer.setAttribute('aria-live', 'off');\n  announcer.innerHTML = message;\n  announcer.setAttribute('aria-live', mode);\n  setTimeout(function () {\n    announcer.innerHTML = '';\n  }, timeout);\n});\nAnnounceContext.propTypes = AnnounceContextPropTypes;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,aAAa;AACtD,IAAIC,eAAe,GAAG,SAASA,eAAe,GAAG;EAC/C,IAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC7CF,SAAS,CAACG,EAAE,GAAG,mBAAmB;EAClCH,SAAS,CAACI,KAAK,CAACC,IAAI,GAAG,OAAO;EAC9BL,SAAS,CAACI,KAAK,CAACE,KAAK,GAAG,MAAM;EAC9BN,SAAS,CAACI,KAAK,CAACG,QAAQ,GAAG,OAAO;EAClCP,SAAS,CAACI,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI;EACjCH,QAAQ,CAACO,IAAI,CAACC,YAAY,CAACT,SAAS,EAAEC,QAAQ,CAACO,IAAI,CAACE,UAAU,CAAC;EAC/D,OAAOV,SAAS;AAClB,CAAC;AACD,OAAO,IAAIW,eAAe,GAAG,aAAad,KAAK,CAACe,aAAa,CAAC,UAAUC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE;EAC9F,IAAID,IAAI,KAAK,KAAK,CAAC,EAAE;IACnBA,IAAI,GAAG,QAAQ;EACjB;EACA,IAAIC,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,GAAG;EACf;EACA;EACA;EACA,IAAIf,SAAS,GAAGC,QAAQ,CAACO,IAAI,CAACQ,aAAa,CAAC,+BAA+B,CAAC,IAAIjB,eAAe,EAAE;EACjGC,SAAS,CAACiB,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC;EAC1CjB,SAAS,CAACkB,SAAS,GAAGL,OAAO;EAC7Bb,SAAS,CAACiB,YAAY,CAAC,WAAW,EAAEH,IAAI,CAAC;EACzCK,UAAU,CAAC,YAAY;IACrBnB,SAAS,CAACkB,SAAS,GAAG,EAAE;EAC1B,CAAC,EAAEH,OAAO,CAAC;AACb,CAAC,CAAC;AACFJ,eAAe,CAACS,SAAS,GAAGtB,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}