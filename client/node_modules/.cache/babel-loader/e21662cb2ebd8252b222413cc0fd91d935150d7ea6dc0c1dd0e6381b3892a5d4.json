{"ast":null,"code":"var _excluded = [\"background\", \"color\", \"direction\", \"size\", \"thickness\", \"type\", \"value\", \"values\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useMemo } from 'react';\nimport { Bar } from './Bar';\nimport { Circle } from './Circle';\nimport { MeterPropTypes } from './propTypes';\nvar deriveMax = function deriveMax(values) {\n  var max = 100;\n  if (values && values.length > 1) {\n    max = 0;\n    values.forEach(function (v) {\n      max += v.value;\n    });\n  }\n  return max;\n};\nvar Meter = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$background = _ref.background,\n    background = _ref$background === void 0 ? {\n      color: 'light-2',\n      opacity: 'medium'\n    } : _ref$background,\n    color = _ref.color,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'horizontal' : _ref$direction,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$thickness = _ref.thickness,\n    thickness = _ref$thickness === void 0 ? 'medium' : _ref$thickness,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'bar' : _ref$type,\n    value = _ref.value,\n    valuesProp = _ref.values,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // normalize values to an array of objects\n  var values = useMemo(function () {\n    if (valuesProp) return valuesProp;\n    if (value) return [{\n      color: color,\n      value: value\n    }];\n    return [];\n  }, [color, value, valuesProp]);\n  var memoizedMax = useMemo(function () {\n    return deriveMax(values);\n  }, [values]);\n  var content;\n  if (type === 'bar') {\n    content = /*#__PURE__*/React.createElement(Bar, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      background: background,\n      direction: direction\n    }, rest));\n  } else if (type === 'circle' || type === 'pie' || type === 'semicircle') {\n    content = /*#__PURE__*/React.createElement(Circle, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      type: type,\n      background: background\n    }, rest));\n  }\n  return content;\n});\nMeter.displayName = 'Meter';\nMeter.prototype = MeterPropTypes;\nexport { Meter };","map":{"version":3,"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useMemo","Bar","Circle","MeterPropTypes","deriveMax","values","max","forEach","v","value","Meter","_ref","ref","_ref$background","background","color","opacity","_ref$direction","direction","_ref$size","size","_ref$thickness","thickness","_ref$type","type","valuesProp","rest","memoizedMax","content","createElement","displayName"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/components/Meter/Meter.js"],"sourcesContent":["var _excluded = [\"background\", \"color\", \"direction\", \"size\", \"thickness\", \"type\", \"value\", \"values\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { forwardRef, useMemo } from 'react';\nimport { Bar } from './Bar';\nimport { Circle } from './Circle';\nimport { MeterPropTypes } from './propTypes';\nvar deriveMax = function deriveMax(values) {\n  var max = 100;\n  if (values && values.length > 1) {\n    max = 0;\n    values.forEach(function (v) {\n      max += v.value;\n    });\n  }\n  return max;\n};\nvar Meter = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$background = _ref.background,\n    background = _ref$background === void 0 ? {\n      color: 'light-2',\n      opacity: 'medium'\n    } : _ref$background,\n    color = _ref.color,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'horizontal' : _ref$direction,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$thickness = _ref.thickness,\n    thickness = _ref$thickness === void 0 ? 'medium' : _ref$thickness,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'bar' : _ref$type,\n    value = _ref.value,\n    valuesProp = _ref.values,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // normalize values to an array of objects\n  var values = useMemo(function () {\n    if (valuesProp) return valuesProp;\n    if (value) return [{\n      color: color,\n      value: value\n    }];\n    return [];\n  }, [color, value, valuesProp]);\n  var memoizedMax = useMemo(function () {\n    return deriveMax(values);\n  }, [values]);\n  var content;\n  if (type === 'bar') {\n    content = /*#__PURE__*/React.createElement(Bar, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      background: background,\n      direction: direction\n    }, rest));\n  } else if (type === 'circle' || type === 'pie' || type === 'semicircle') {\n    content = /*#__PURE__*/React.createElement(Circle, _extends({\n      ref: ref,\n      max: memoizedMax,\n      values: values,\n      size: size,\n      thickness: thickness,\n      type: type,\n      background: background\n    }, rest));\n  }\n  return content;\n});\nMeter.displayName = 'Meter';\nMeter.prototype = MeterPropTypes;\nexport { Meter };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}