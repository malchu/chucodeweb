{"ast":null,"code":"var _excluded = [\"values\", \"pad\", \"renderValue\", \"serie\", \"theme\", \"thickness\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useMemo } from 'react';\nimport { edgeToNum } from '../../utils';\nimport { Box } from '../Box';\nvar XAxis = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var values = _ref.values,\n    padProp = _ref.pad,\n    renderValue = _ref.renderValue,\n    serie = _ref.serie,\n    theme = _ref.theme,\n    thickness = _ref.thickness,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // pad to the edge of the thickness, for when padding is more than half\n  // the thickness\n  var pad = useMemo(function () {\n    return {\n      start: edgeToNum(padProp.start || padProp.horizontal, theme) - edgeToNum(thickness, theme) / 2 + \"px\",\n      end: edgeToNum(padProp.end || padProp.horizontal, theme) - edgeToNum(thickness, theme) / 2 + \"px\"\n    };\n  }, [padProp, theme, thickness]);\n\n  // When there are only labels at the end of the axis and there isn't\n  // much space for them, let them take as much space as they like\n  // flowing in from the edges.\n  // Otherwise, align their container to the\n  // data/guide lines and then let their content overflow that.\n  var labelContainerProps = useMemo(function () {\n    // 24px was chosen empirically as 48px is enough to show some simple text\n    var centered = values.length !== 2 || edgeToNum(padProp.start || padProp.horizontal, theme) >= 24;\n    if (centered) return {\n      width: thickness,\n      overflow: 'visible',\n      align: 'center'\n    };\n    return {};\n  }, [padProp, theme, thickness, values]);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    ref: ref,\n    gridArea: \"xAxis\",\n    direction: \"row\",\n    justify: \"between\",\n    pad: pad\n  }, rest), values.map(function (dataIndex, i) {\n    return /*#__PURE__*/(\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(Box, _extends({\n        key: i\n      }, labelContainerProps), serie ? renderValue(serie, dataIndex) : dataIndex)\n    );\n  }));\n});\nexport { XAxis };","map":{"version":3,"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useMemo","edgeToNum","Box","XAxis","_ref","ref","values","padProp","pad","renderValue","serie","theme","thickness","rest","start","horizontal","end","labelContainerProps","centered","width","overflow","align","createElement","gridArea","direction","justify","map","dataIndex"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/components/DataChart/XAxis.js"],"sourcesContent":["var _excluded = [\"values\", \"pad\", \"renderValue\", \"serie\", \"theme\", \"thickness\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { forwardRef, useMemo } from 'react';\nimport { edgeToNum } from '../../utils';\nimport { Box } from '../Box';\nvar XAxis = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var values = _ref.values,\n    padProp = _ref.pad,\n    renderValue = _ref.renderValue,\n    serie = _ref.serie,\n    theme = _ref.theme,\n    thickness = _ref.thickness,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // pad to the edge of the thickness, for when padding is more than half\n  // the thickness\n  var pad = useMemo(function () {\n    return {\n      start: edgeToNum(padProp.start || padProp.horizontal, theme) - edgeToNum(thickness, theme) / 2 + \"px\",\n      end: edgeToNum(padProp.end || padProp.horizontal, theme) - edgeToNum(thickness, theme) / 2 + \"px\"\n    };\n  }, [padProp, theme, thickness]);\n\n  // When there are only labels at the end of the axis and there isn't\n  // much space for them, let them take as much space as they like\n  // flowing in from the edges.\n  // Otherwise, align their container to the\n  // data/guide lines and then let their content overflow that.\n  var labelContainerProps = useMemo(function () {\n    // 24px was chosen empirically as 48px is enough to show some simple text\n    var centered = values.length !== 2 || edgeToNum(padProp.start || padProp.horizontal, theme) >= 24;\n    if (centered) return {\n      width: thickness,\n      overflow: 'visible',\n      align: 'center'\n    };\n    return {};\n  }, [padProp, theme, thickness, values]);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    ref: ref,\n    gridArea: \"xAxis\",\n    direction: \"row\",\n    justify: \"between\",\n    pad: pad\n  }, rest), values.map(function (dataIndex, i) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(Box, _extends({\n        key: i\n      }, labelContainerProps), serie ? renderValue(serie, dataIndex) : dataIndex)\n    );\n  }));\n});\nexport { XAxis };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}