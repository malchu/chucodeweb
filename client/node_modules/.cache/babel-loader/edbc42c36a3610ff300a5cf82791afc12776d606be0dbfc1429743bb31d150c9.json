{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malch\\\\OneDrive\\\\Documents\\\\Projects\\\\ChuCode\\\\client\\\\src\\\\Pages\\\\Dashboard.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Fields\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [listOfProblems, setListOfProblems] = useState([]);\nconst [name, setName] = useState(\"\");\nconst [difficulty, setDifficulty] = useState(\"\");\nvar curr = new Date();\ncurr.setDate(curr.getDate() + 3);\nvar defaultDate = curr.toISOString().substring(0, 10);\nconst [date, setDate] = useState(defaultDate);\nconst [duration, setDuration] = useState(0);\nconst [attempts, setAttempts] = useState(0);\nconst [completed, setCompleted] = useState(\"\");\n\n// retrieve data from MongoDB\nuseEffect(() => {\n  Axios.get(\"http://localhost:3001/getProblems\").then(response => {\n    setListOfProblems(response.data);\n  });\n}, []);\n\n// functions\nconst createProblem = () => {\n  Axios.post(\"http://localhost:3001/createProblem\", {\n    name,\n    difficulty,\n    date,\n    duration,\n    attempts,\n    completed\n  }).then(response => {\n    setListOfProblems([...listOfProblems, {\n      name,\n      difficulty,\n      date,\n      duration,\n      attempts,\n      completed\n    }]);\n  });\n};\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  plugins: {\n    title: {\n      display: true,\n      text: 'LeetCode Category Summary'\n    }\n  },\n  responsive: true,\n  scales: {\n    x: {\n      stacked: true\n    },\n    y: {\n      stacked: true\n    }\n  }\n};\nconst labels = ['Arrays & Hashing', 'Two Pointers', 'Sliding Window', 'Stack', 'Binary Search', 'Linked List', 'Trees'];\nexport const data = {\n  labels,\n  datasets: [{\n    label: 'Easy',\n    data: labels.map(() => 10),\n    backgroundColor: 'rgb(0, 255, 136)'\n  }, {\n    label: 'Medium',\n    data: labels.map(() => 20),\n    backgroundColor: 'rgb(231, 168, 50)'\n  }, {\n    label: 'Hard',\n    data: labels.map(() => 15),\n    backgroundColor: 'red'\n  }]\n};\nexport function Dashboard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","listOfProblems","setListOfProblems","useState","name","setName","difficulty","setDifficulty","curr","Date","setDate","getDate","defaultDate","toISOString","substring","date","duration","setDuration","attempts","setAttempts","completed","setCompleted","useEffect","Axios","get","then","response","data","createProblem","post","register","options","plugins","title","display","text","responsive","scales","x","stacked","y","labels","datasets","label","map","backgroundColor","Dashboard"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/ChuCode/client/src/Pages/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n// Fields\r\nconst [listOfProblems, setListOfProblems] = useState([])\r\nconst [name, setName] = useState(\"\")\r\nconst [difficulty, setDifficulty] = useState(\"\")\r\nvar curr = new Date();\r\ncurr.setDate(curr.getDate() + 3);\r\nvar defaultDate = curr.toISOString().substring(0,10);\r\nconst [date, setDate] = useState(defaultDate)\r\nconst [duration, setDuration] = useState(0)\r\nconst [attempts, setAttempts] = useState(0)\r\nconst [completed, setCompleted] = useState(\"\")  \r\n\r\n// retrieve data from MongoDB\r\nuseEffect(() => {\r\n  Axios.get(\"http://localhost:3001/getProblems\").then((response) => {\r\n    setListOfProblems(response.data)\r\n  });\r\n}, [])\r\n\r\n// functions\r\nconst createProblem = () => {\r\n  Axios.post(\"http://localhost:3001/createProblem\", {\r\n    name, \r\n    difficulty, \r\n    date,\r\n    duration,\r\n    attempts,\r\n    completed,\r\n  }).then((response) => {\r\n    setListOfProblems([...listOfProblems, {\r\n      name, \r\n      difficulty, \r\n      date,\r\n      duration,\r\n      attempts,\r\n      completed,\r\n    }])\r\n  })\r\n}\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: 'LeetCode Category Summary',\r\n    },\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      stacked: true,\r\n    },\r\n    y: {\r\n      stacked: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Arrays & Hashing', 'Two Pointers', 'Sliding Window', 'Stack', 'Binary Search', 'Linked List', 'Trees'];\r\n\r\nexport const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Easy',\r\n      data: labels.map(() => 10),\r\n      backgroundColor: 'rgb(0, 255, 136)',\r\n    },\r\n    {\r\n      label: 'Medium',\r\n      data: labels.map(() => 20),\r\n      backgroundColor: 'rgb(231, 168, 50)',\r\n    },\r\n    {\r\n      label: 'Hard',\r\n      data: labels.map(() => 15),\r\n      backgroundColor: 'red',\r\n    },\r\n  ],\r\n};\r\n\r\nexport function Dashboard() {\r\n  return <div id='chart'><Bar options={options} data={data} /></div>;\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AAAA;AACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;AACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AACpC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;AAChD,IAAIK,IAAI,GAAG,IAAIC,IAAI,EAAE;AACrBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC;AAChC,IAAIC,WAAW,GAAGJ,IAAI,CAACK,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC;AACpD,MAAM,CAACC,IAAI,EAAEL,OAAO,CAAC,GAAGP,QAAQ,CAACS,WAAW,CAAC;AAC7C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;AAC3C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;AAC3C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;AAE9C;AACAmB,SAAS,CAAC,MAAM;EACdC,KAAK,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IAChExB,iBAAiB,CAACwB,QAAQ,CAACC,IAAI,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,EAAE,EAAE,CAAC;;AAEN;AACA,MAAMC,aAAa,GAAG,MAAM;EAC1BL,KAAK,CAACM,IAAI,CAAC,qCAAqC,EAAE;IAChDzB,IAAI;IACJE,UAAU;IACVS,IAAI;IACJC,QAAQ;IACRE,QAAQ;IACRE;EACF,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;IACpBxB,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE;MACpCG,IAAI;MACJE,UAAU;MACVS,IAAI;MACJC,QAAQ;MACRE,QAAQ;MACRE;IACF,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;AACJ,CAAC;AAED3B,OAAO,CAACqC,QAAQ,CACdpC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAED,OAAO,MAAMgC,OAAO,GAAG;EACrBC,OAAO,EAAE;IACPC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE;IACNC,CAAC,EAAE;MACDC,OAAO,EAAE;IACX,CAAC;IACDC,CAAC,EAAE;MACDD,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,MAAME,MAAM,GAAG,CAAC,kBAAkB,EAAE,cAAc,EAAE,gBAAgB,EAAE,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,OAAO,CAAC;AAEvH,OAAO,MAAMd,IAAI,GAAG;EAClBc,MAAM;EACNC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,MAAM;IACbhB,IAAI,EAAEc,MAAM,CAACG,GAAG,CAAC,MAAM,EAAE,CAAC;IAC1BC,eAAe,EAAE;EACnB,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfhB,IAAI,EAAEc,MAAM,CAACG,GAAG,CAAC,MAAM,EAAE,CAAC;IAC1BC,eAAe,EAAE;EACnB,CAAC,EACD;IACEF,KAAK,EAAE,MAAM;IACbhB,IAAI,EAAEc,MAAM,CAACG,GAAG,CAAC,MAAM,EAAE,CAAC;IAC1BC,eAAe,EAAE;EACnB,CAAC;AAEL,CAAC;AAED,OAAO,SAASC,SAAS,GAAG;EAC1B,oBAAO;IAAK,EAAE,EAAC,OAAO;IAAA,uBAAC,QAAC,GAAG;MAAC,OAAO,EAAEf,OAAQ;MAAC,IAAI,EAAEJ;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAAM;AACpE;AAAC,KAFemB,SAAS;AAIzB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}