{"ast":null,"code":"var POST_DECIMAL_DIGITS = 10;\nexport var baseUnit = 24;\nexport var polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n};\nexport var arcCommands = function arcCommands(centerX, centerY, radius, startAngle, endAngle) {\n  // handle that we can't draw a complete circle\n  var normalizedEndAngle = endAngle;\n  /* \n   added endAngle - startAngle >= 360 \n   for SemiCircle the endAngle will never be greater then startAngle \n   since it starts with a startAngle of 270.\n  */\n  if (endAngle > startAngle && endAngle - startAngle >= 360) {\n    normalizedEndAngle = startAngle + 359.99;\n  }\n  var start = polarToCartesian(centerX, centerY, radius, normalizedEndAngle);\n  var end = polarToCartesian(centerX, centerY, radius, startAngle);\n  var arcSweep = normalizedEndAngle - startAngle <= 180 ? '0' : '1';\n  var d = ['M', start.x.toFixed(POST_DECIMAL_DIGITS), start.y.toFixed(POST_DECIMAL_DIGITS), 'A', radius.toFixed(POST_DECIMAL_DIGITS), radius.toFixed(POST_DECIMAL_DIGITS), 0, arcSweep, 0, end.x.toFixed(POST_DECIMAL_DIGITS), end.y.toFixed(POST_DECIMAL_DIGITS)].join(' ');\n  return d;\n};\n\n/* TranslatedEngAngle will now take the value of the\nstartAngle + anglePer * value and mod by 360. This was added\nto take account the startAngle not being 0. So no matter the\nvalue it will be % 360 to get the correct angle. \n*/\nexport var translateEndAngle = function translateEndAngle(startAngle, anglePer, value) {\n  return Math.max(0, startAngle + anglePer * value) % 360;\n};","map":{"version":3,"names":["POST_DECIMAL_DIGITS","baseUnit","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","arcCommands","startAngle","endAngle","normalizedEndAngle","start","end","arcSweep","d","toFixed","join","translateEndAngle","anglePer","value","max"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/utils/graphics.js"],"sourcesContent":["var POST_DECIMAL_DIGITS = 10;\nexport var baseUnit = 24;\nexport var polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n};\nexport var arcCommands = function arcCommands(centerX, centerY, radius, startAngle, endAngle) {\n  // handle that we can't draw a complete circle\n  var normalizedEndAngle = endAngle;\n  /* \n   added endAngle - startAngle >= 360 \n   for SemiCircle the endAngle will never be greater then startAngle \n   since it starts with a startAngle of 270.\n  */\n  if (endAngle > startAngle && endAngle - startAngle >= 360) {\n    normalizedEndAngle = startAngle + 359.99;\n  }\n  var start = polarToCartesian(centerX, centerY, radius, normalizedEndAngle);\n  var end = polarToCartesian(centerX, centerY, radius, startAngle);\n  var arcSweep = normalizedEndAngle - startAngle <= 180 ? '0' : '1';\n  var d = ['M', start.x.toFixed(POST_DECIMAL_DIGITS), start.y.toFixed(POST_DECIMAL_DIGITS), 'A', radius.toFixed(POST_DECIMAL_DIGITS), radius.toFixed(POST_DECIMAL_DIGITS), 0, arcSweep, 0, end.x.toFixed(POST_DECIMAL_DIGITS), end.y.toFixed(POST_DECIMAL_DIGITS)].join(' ');\n  return d;\n};\n\n/* TranslatedEngAngle will now take the value of the\nstartAngle + anglePer * value and mod by 360. This was added\nto take account the startAngle not being 0. So no matter the\nvalue it will be % 360 to get the correct angle. \n*/\nexport var translateEndAngle = function translateEndAngle(startAngle, anglePer, value) {\n  return Math.max(0, startAngle + anglePer * value) % 360;\n};"],"mappings":"AAAA,IAAIA,mBAAmB,GAAG,EAAE;AAC5B,OAAO,IAAIC,QAAQ,GAAG,EAAE;AACxB,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAgB,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,cAAc,EAAE;EAChG,IAAIC,cAAc,GAAG,CAACD,cAAc,GAAG,EAAE,IAAIE,IAAI,CAACC,EAAE,GAAG,KAAK;EAC5D,OAAO;IACLC,CAAC,EAAEP,OAAO,GAAGE,MAAM,GAAGG,IAAI,CAACG,GAAG,CAACJ,cAAc,CAAC;IAC9CK,CAAC,EAAER,OAAO,GAAGC,MAAM,GAAGG,IAAI,CAACK,GAAG,CAACN,cAAc;EAC/C,CAAC;AACH,CAAC;AACD,OAAO,IAAIO,WAAW,GAAG,SAASA,WAAW,CAACX,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEU,UAAU,EAAEC,QAAQ,EAAE;EAC5F;EACA,IAAIC,kBAAkB,GAAGD,QAAQ;EACjC;AACF;AACA;AACA;AACA;EACE,IAAIA,QAAQ,GAAGD,UAAU,IAAIC,QAAQ,GAAGD,UAAU,IAAI,GAAG,EAAE;IACzDE,kBAAkB,GAAGF,UAAU,GAAG,MAAM;EAC1C;EACA,IAAIG,KAAK,GAAGhB,gBAAgB,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEY,kBAAkB,CAAC;EAC1E,IAAIE,GAAG,GAAGjB,gBAAgB,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEU,UAAU,CAAC;EAChE,IAAIK,QAAQ,GAAGH,kBAAkB,GAAGF,UAAU,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;EACjE,IAAIM,CAAC,GAAG,CAAC,GAAG,EAAEH,KAAK,CAACR,CAAC,CAACY,OAAO,CAACtB,mBAAmB,CAAC,EAAEkB,KAAK,CAACN,CAAC,CAACU,OAAO,CAACtB,mBAAmB,CAAC,EAAE,GAAG,EAAEK,MAAM,CAACiB,OAAO,CAACtB,mBAAmB,CAAC,EAAEK,MAAM,CAACiB,OAAO,CAACtB,mBAAmB,CAAC,EAAE,CAAC,EAAEoB,QAAQ,EAAE,CAAC,EAAED,GAAG,CAACT,CAAC,CAACY,OAAO,CAACtB,mBAAmB,CAAC,EAAEmB,GAAG,CAACP,CAAC,CAACU,OAAO,CAACtB,mBAAmB,CAAC,CAAC,CAACuB,IAAI,CAAC,GAAG,CAAC;EAC1Q,OAAOF,CAAC;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIG,iBAAiB,GAAG,SAASA,iBAAiB,CAACT,UAAU,EAAEU,QAAQ,EAAEC,KAAK,EAAE;EACrF,OAAOlB,IAAI,CAACmB,GAAG,CAAC,CAAC,EAAEZ,UAAU,GAAGU,QAAQ,GAAGC,KAAK,CAAC,GAAG,GAAG;AACzD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}