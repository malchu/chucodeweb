{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malch\\\\OneDrive\\\\Documents\\\\Projects\\\\chucode\\\\client\\\\src\\\\App.js\";\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\nimport Home from './Pages/Home';\nimport Submissions from './Pages/Submissions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // // Fields\n  // const [listOfProblems, setListOfProblems] = useState([])\n  // const [name, setName] = useState(\"\")\n  // const [difficulty, setDifficulty] = useState(\"\")\n  // var curr = new Date();\n  // curr.setDate(curr.getDate() + 3);\n  // var defaultDate = curr.toISOString().substring(0,10);\n  // const [date, setDate] = useState(defaultDate)\n  // const [duration, setDuration] = useState(0)\n  // const [attempts, setAttempts] = useState(0)\n  // const [completed, setCompleted] = useState(\"\")  \n\n  // // retrieve data from MongoDB\n  // useEffect(() => {\n  //   Axios.get(\"http://localhost:3001/getProblems\").then((response) => {\n  //     setListOfProblems(response.data)\n  //   });\n  // }, [])\n\n  // // functions\n  // const createProblem = () => {\n  //   Axios.post(\"http://localhost:3001/createProblem\", {\n  //     name, \n  //     difficulty, \n  //     date,\n  //     duration,\n  //     attempts,\n  //     completed,\n  //   }).then((response) => {\n  //     setListOfProblems([...listOfProblems, {\n  //       name, \n  //       difficulty, \n  //       date,\n  //       duration,\n  //       attempts,\n  //       completed,\n  //     }])\n  //   })\n  // }\n\n  // rendering\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/submissions\",\n        element: /*#__PURE__*/_jsxDEV(Submissions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Axios","React","BrowserRouter","Router","Routes","Route","Dashboard","Home","Submissions","App"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Dashboard from './Pages/Dashboard';\nimport Home from './Pages/Home';\nimport Submissions from './Pages/Submissions';\n\nfunction App() {\n  \n  // // Fields\n  // const [listOfProblems, setListOfProblems] = useState([])\n  // const [name, setName] = useState(\"\")\n  // const [difficulty, setDifficulty] = useState(\"\")\n  // var curr = new Date();\n  // curr.setDate(curr.getDate() + 3);\n  // var defaultDate = curr.toISOString().substring(0,10);\n  // const [date, setDate] = useState(defaultDate)\n  // const [duration, setDuration] = useState(0)\n  // const [attempts, setAttempts] = useState(0)\n  // const [completed, setCompleted] = useState(\"\")  \n\n  // // retrieve data from MongoDB\n  // useEffect(() => {\n  //   Axios.get(\"http://localhost:3001/getProblems\").then((response) => {\n  //     setListOfProblems(response.data)\n  //   });\n  // }, [])\n\n  // // functions\n  // const createProblem = () => {\n  //   Axios.post(\"http://localhost:3001/createProblem\", {\n  //     name, \n  //     difficulty, \n  //     date,\n  //     duration,\n  //     attempts,\n  //     completed,\n  //   }).then((response) => {\n  //     setListOfProblems([...listOfProblems, {\n  //       name, \n  //       difficulty, \n  //       date,\n  //       duration,\n  //       attempts,\n  //       completed,\n  //     }])\n  //   })\n  // }\n\n  // rendering\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/dashboard' element={<Dashboard />} />\n        <Route path='/submissions' element={<Submissions />} />\n      </Routes>\n      {/* <body>\n      <div className=\"App\">\n        <div className=\"problemsDisplay\">\n          {listOfProblems.map((problem) => {\n            return (\n              <div className='container'>\n                <div className='card'>\n                  <h3>Name: {problem.name}</h3>\n                  <h3>Difficulty: {problem.difficulty}</h3>\n                  <h3>Date: {problem.date}</h3>\n                  <h3>Duration: {problem.duration}</h3>\n                  <h3>Attempts: {problem.attempts}</h3>\n                  <h3>Completed: {problem.completed}</h3>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        \n        <div className='title'>\n          <h1>Submission Log</h1>\n        </div>\n\n        <div className='inputContainer'>\n          <input className='textbox' type=\"text\" id='input' placeholder='Problem Name' onChange={(event) => {\n            setName(event.target.value)}}></input>\n          <input className='textbox' type=\"text\" id='input' placeholder='Difficulty' onChange={(event) => {\n            setDifficulty(event.target.value)}}></input>\n          <input className='textbox' type=\"date\" id='input' placeholder='Date' onChange={(event) => {\n            setDate(event.target.value)}}></input>\n          <input className='textbox' type=\"number\" id='input' placeholder='Duration (minutes)' onChange={(event) => {\n            setDuration(event.target.value)}}></input>\n          <input className='textbox' type=\"number\" id='input' placeholder='Attempts' onChange={(event) => {\n            setAttempts(event.target.value)}}></input>\n          <input className='textbox' type=\"text\" id='input' placeholder='Completed' onChange={(event) => {\n            setCompleted(event.target.value)}}></input>\n          <button className='createProblem' onClick={createProblem}>Add Problem</button>\n        </div>\n      </div>\n      </body> */}\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,WAAW,MAAM,qBAAqB;AAAC;AAE9C,SAASC,GAAG,GAAG;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE,QAAC,MAAM;IAAA,uBACL,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,KAAK;QAAC,IAAI,EAAC,YAAY;QAAC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD,QAAC,KAAK;QAAC,IAAI,EAAC,cAAc;QAAC,OAAO,eAAE,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAChD;IAAA;IAAA;IAAA;EAAA,QAyCF;AAEb;AAAC,KA5FQA,GAAG;AA8FZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}