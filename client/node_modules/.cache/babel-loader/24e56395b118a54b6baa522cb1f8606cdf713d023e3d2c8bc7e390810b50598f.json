{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malch\\\\OneDrive\\\\Documents\\\\Projects\\\\chucode\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport React from 'react';\nimport Navbar from './components/NavBar';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Dashboard from './components/Pages';\nimport Submissions from './components/Pages/Submissions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [listOfProblems, setListOfProblems] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  var curr = new Date();\n  curr.setDate(curr.getDate() + 3);\n  var defaultDate = curr.toISOString().substring(0, 10);\n  const [date, setDate] = useState(defaultDate);\n  const [duration, setDuration] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [completed, setCompleted] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getProblems\").then(response => {\n      setListOfProblems(response.data);\n    });\n  }, []);\n  const createProblem = () => {\n    Axios.post(\"http://localhost:3001/createProblem\", {\n      name,\n      difficulty,\n      date,\n      duration,\n      attempts,\n      completed\n    }).then(response => {\n      setListOfProblems([...listOfProblems, {\n        name,\n        difficulty,\n        date,\n        duration,\n        attempts,\n        completed\n      }]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/submissions\",\n        element: /*#__PURE__*/_jsxDEV(Submissions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)\n  // <body>\n  // <div className=\"App\">\n  //   <div className=\"problemsDisplay\">\n  //     {listOfProblems.map((problem) => {\n  //       return (\n  //         <div className='container'>\n  //           <div className='card'>\n  //             <h3>Name: {problem.name}</h3>\n  //             <h3>Difficulty: {problem.difficulty}</h3>\n  //             <h3>Date: {problem.date}</h3>\n  //             <h3>Duration: {problem.duration}</h3>\n  //             <h3>Attempts: {problem.attempts}</h3>\n  //             <h3>Completed: {problem.completed}</h3>\n  //           </div>\n  //         </div>\n  //       );\n  //     })}\n  //   </div>\n\n  //   <div className='title'>\n  //     <h1>Submission Log</h1>\n  //   </div>\n\n  //   <div className='inputContainer'>\n  //     <input className='textbox' type=\"text\" id='input' placeholder='Problem Name' onChange={(event) => {\n  //       setName(event.target.value)}}></input>\n  //     <input className='textbox' type=\"text\" id='input' placeholder='Difficulty' onChange={(event) => {\n  //       setDifficulty(event.target.value)}}></input>\n  //     <input className='textbox' type=\"date\" id='input' placeholder='Date' onChange={(event) => {\n  //       setDate(event.target.value)}}></input>\n  //     <input className='textbox' type=\"number\" id='input' placeholder='Duration (minutes)' onChange={(event) => {\n  //       setDuration(event.target.value)}}></input>\n  //     <input className='textbox' type=\"number\" id='input' placeholder='Attempts' onChange={(event) => {\n  //       setAttempts(event.target.value)}}></input>\n  //     <input className='textbox' type=\"text\" id='input' placeholder='Completed' onChange={(event) => {\n  //       setCompleted(event.target.value)}}></input>\n  //     <button className='createProblem' onClick={createProblem}>Add Problem</button>\n  //   </div>\n  // </div>\n  // </body>\n  ;\n}\n_s(App, \"BJQyXVRB6UxC7NH1mQ4kmJt0kNA=\");\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 101,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","Axios","React","Navbar","BrowserRouter","Router","Routes","Route","Dashboard","Submissions","App","listOfProblems","setListOfProblems","name","setName","difficulty","setDifficulty","curr","Date","setDate","getDate","defaultDate","toISOString","substring","date","duration","setDuration","attempts","setAttempts","completed","setCompleted","get","then","response","data","createProblem","post","ReactDOM","render","document","getElementById"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport React from 'react';\nimport Navbar from './components/NavBar';\nimport { BrowserRouter as Router, Routes, Route}\n    from 'react-router-dom';\nimport Dashboard from './components/Pages';\nimport Submissions from './components/Pages/Submissions';\n\nfunction App() {\n  const [listOfProblems, setListOfProblems] = useState([])\n\n  const [name, setName] = useState(\"\")\n  const [difficulty, setDifficulty] = useState(\"\")\n  var curr = new Date();\n  curr.setDate(curr.getDate() + 3);\n  var defaultDate = curr.toISOString().substring(0,10);\n  const [date, setDate] = useState(defaultDate)\n  const [duration, setDuration] = useState(0)\n  const [attempts, setAttempts] = useState(0)\n  const [completed, setCompleted] = useState(\"\")  \n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getProblems\").then((response) => {\n      setListOfProblems(response.data)\n    });\n  }, [])\n\n  const createProblem = () => {\n    Axios.post(\"http://localhost:3001/createProblem\", {\n      name, \n      difficulty, \n      date,\n      duration,\n      attempts,\n      completed,\n    }).then((response) => {\n      setListOfProblems([...listOfProblems, {\n        name, \n        difficulty, \n        date,\n        duration,\n        attempts,\n        completed,\n      }])\n    })\n  }\n\n  return (\n    <Router>\n    <Navbar />\n    <Routes>\n        <Route path='/' element={<Dashboard/>} />\n        <Route path='/submissions' element={<Submissions/>} />\n    </Routes>\n    </Router>\n    // <body>\n    // <div className=\"App\">\n    //   <div className=\"problemsDisplay\">\n    //     {listOfProblems.map((problem) => {\n    //       return (\n    //         <div className='container'>\n    //           <div className='card'>\n    //             <h3>Name: {problem.name}</h3>\n    //             <h3>Difficulty: {problem.difficulty}</h3>\n    //             <h3>Date: {problem.date}</h3>\n    //             <h3>Duration: {problem.duration}</h3>\n    //             <h3>Attempts: {problem.attempts}</h3>\n    //             <h3>Completed: {problem.completed}</h3>\n    //           </div>\n    //         </div>\n    //       );\n    //     })}\n    //   </div>\n      \n    //   <div className='title'>\n    //     <h1>Submission Log</h1>\n    //   </div>\n\n    //   <div className='inputContainer'>\n    //     <input className='textbox' type=\"text\" id='input' placeholder='Problem Name' onChange={(event) => {\n    //       setName(event.target.value)}}></input>\n    //     <input className='textbox' type=\"text\" id='input' placeholder='Difficulty' onChange={(event) => {\n    //       setDifficulty(event.target.value)}}></input>\n    //     <input className='textbox' type=\"date\" id='input' placeholder='Date' onChange={(event) => {\n    //       setDate(event.target.value)}}></input>\n    //     <input className='textbox' type=\"number\" id='input' placeholder='Duration (minutes)' onChange={(event) => {\n    //       setDuration(event.target.value)}}></input>\n    //     <input className='textbox' type=\"number\" id='input' placeholder='Attempts' onChange={(event) => {\n    //       setAttempts(event.target.value)}}></input>\n    //     <input className='textbox' type=\"text\" id='input' placeholder='Completed' onChange={(event) => {\n    //       setCompleted(event.target.value)}}></input>\n    //     <button className='createProblem' onClick={createProblem}>Add Problem</button>\n    //   </div>\n    // </div>\n    // </body>\n  );\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}