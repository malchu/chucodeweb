{"ast":null,"code":"var _excluded = [\"disabled\", \"id\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { SelectTextInput } from './StyledSelect';\nexport var DefaultSelectTextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var disabled = _ref.disabled,\n    id = _ref.id,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(SelectTextInput\n  // When Select is disabled, we want to show a default cursor\n  // but not have disabled styling come from TextInput\n  // Disabled can be a bool or an array of options to disable.\n  // We only want to disable the TextInput if the control\n  // button should be disabled which occurs when disabled\n  // equals true.\n  , _extends({\n    defaultCursor: disabled === true || undefined,\n    focusIndicator: false,\n    id: id ? id + \"__input\" : undefined,\n    ref: ref\n  }, rest, {\n    tabIndex: \"-1\",\n    type: \"text\",\n    plain: true,\n    readOnly: true\n  }));\n});","map":{"version":3,"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","SelectTextInput","DefaultSelectTextInput","_ref","ref","disabled","id","rest","createElement","defaultCursor","undefined","focusIndicator","tabIndex","type","plain","readOnly"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/components/Select/DefaultSelectTextInput.js"],"sourcesContent":["var _excluded = [\"disabled\", \"id\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { forwardRef } from 'react';\nimport { SelectTextInput } from './StyledSelect';\nexport var DefaultSelectTextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var disabled = _ref.disabled,\n    id = _ref.id,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(SelectTextInput\n  // When Select is disabled, we want to show a default cursor\n  // but not have disabled styling come from TextInput\n  // Disabled can be a bool or an array of options to disable.\n  // We only want to disable the TextInput if the control\n  // button should be disabled which occurs when disabled\n  // equals true.\n  , _extends({\n    defaultCursor: disabled === true || undefined,\n    focusIndicator: false,\n    id: id ? id + \"__input\" : undefined,\n    ref: ref\n  }, rest, {\n    tabIndex: \"-1\",\n    type: \"text\",\n    plain: true,\n    readOnly: true\n  }));\n});"],"mappings":"AAAA,IAAIA,SAAS,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC;AAClC,SAASC,QAAQ,GAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE,GAAG,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIP,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOJ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAClV,SAASQ,6BAA6B,CAACN,MAAM,EAAEO,QAAQ,EAAE;EAAE,IAAIP,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC;EAAE,IAAIJ,MAAM,GAAG,CAAC,CAAC;EAAE,IAAIY,UAAU,GAAGf,MAAM,CAACgB,IAAI,CAACT,MAAM,CAAC;EAAE,IAAIC,GAAG,EAAEJ,CAAC;EAAE,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,UAAU,CAACT,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAEI,GAAG,GAAGO,UAAU,CAACX,CAAC,CAAC;IAAE,IAAIU,QAAQ,CAACG,OAAO,CAACT,GAAG,CAAC,IAAI,CAAC,EAAE;IAAUL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;EAAE;EAAE,OAAOL,MAAM;AAAE;AAClT,OAAOe,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,OAAO,IAAIC,sBAAsB,GAAG,aAAaF,UAAU,CAAC,UAAUG,IAAI,EAAEC,GAAG,EAAE;EAC/E,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IAC1BC,EAAE,GAAGH,IAAI,CAACG,EAAE;IACZC,IAAI,GAAGb,6BAA6B,CAACS,IAAI,EAAExB,SAAS,CAAC;EACvD,OAAO,aAAaoB,KAAK,CAACS,aAAa,CAACP;EACxC;EACA;EACA;EACA;EACA;EACA;EAAA,EACErB,QAAQ,CAAC;IACT6B,aAAa,EAAEJ,QAAQ,KAAK,IAAI,IAAIK,SAAS;IAC7CC,cAAc,EAAE,KAAK;IACrBL,EAAE,EAAEA,EAAE,GAAGA,EAAE,GAAG,SAAS,GAAGI,SAAS;IACnCN,GAAG,EAAEA;EACP,CAAC,EAAEG,IAAI,EAAE;IACPK,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}