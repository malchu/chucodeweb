{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malch\\\\OneDrive\\\\Documents\\\\Projects\\\\ChuCode\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  plugins: {\n    title: {\n      display: true,\n      text: 'LeetCode Category Summary'\n    }\n  },\n  responsive: true,\n  scales: {\n    x: {\n      stacked: true\n    },\n    y: {\n      stacked: true\n    }\n  }\n};\nconst labels = ['Arrays & Hashing', 'Two Pointers', 'Sliding Window', 'Stack', 'Binary Search', 'Linked List', 'Trees'];\nexport function Dashboard() {\n  _s();\n  // Fields\n  const [listOfProblems, setListOfProblems] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  var curr = new Date();\n  curr.setDate(curr.getDate() + 3);\n  var defaultDate = curr.toISOString().substring(0, 10);\n  const [date, setDate] = useState(defaultDate);\n  const [duration, setDuration] = useState(0);\n  const [attempts, setAttempts] = useState(\"\");\n  const [completed, setCompleted] = useState(\"\");\n\n  // retrieve data from MongoDB\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getProblems\").then(response => {\n      setListOfProblems(response.data);\n    });\n  }, []);\n\n  // functions\n  const createProblem = () => {\n    Axios.post(\"http://localhost:3001/createProblem\", {\n      name,\n      difficulty,\n      date,\n      duration,\n      attempts,\n      completed\n    }).then(response => {\n      setListOfProblems([...listOfProblems, {\n        name,\n        difficulty,\n        date,\n        duration,\n        attempts,\n        completed\n      }]);\n    });\n  };\n  var easy = [];\n  var med = [];\n  var hard = [];\n  {\n    listOfProblems.map(problem => {\n      if (problem.difficulty == \"Easy\") {\n        easy.push(problem);\n      } else if (problem.difficulty == \"Medium\") {\n        med.push(problem);\n      } else {\n        hard.push(problem);\n      }\n    });\n  }\n  ;\n  var hash = {};\n  listOfProblems.forEach(problem => {\n    if (problem.attempts in hash) {} else {\n      hash['problems.attempts'];\n    }\n  });\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Easy',\n      data: labels.map(() => easy.length),\n      backgroundColor: 'rgb(0, 255, 136)'\n    }, {\n      label: 'Medium',\n      data: labels.map(() => med),\n      backgroundColor: 'rgb(231, 168, 50)'\n    }, {\n      label: 'Hard',\n      data: labels.map(() => hard),\n      backgroundColor: 'red'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 10\n  }, this);\n}\n_s(Dashboard, \"pXPtpRokaJ176716V56S176khjg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","useState","useEffect","Axios","register","options","plugins","title","display","text","responsive","scales","x","stacked","y","labels","Dashboard","listOfProblems","setListOfProblems","name","setName","difficulty","setDifficulty","curr","Date","setDate","getDate","defaultDate","toISOString","substring","date","duration","setDuration","attempts","setAttempts","completed","setCompleted","get","then","response","data","createProblem","post","easy","med","hard","map","problem","push","hash","forEach","datasets","label","length","backgroundColor"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/ChuCode/client/src/Pages/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: 'LeetCode Category Summary',\r\n    },\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      stacked: true,\r\n    },\r\n    y: {\r\n      stacked: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Arrays & Hashing', 'Two Pointers', 'Sliding Window', 'Stack', 'Binary Search', 'Linked List', 'Trees'];\r\n\r\nexport function Dashboard() {\r\n  // Fields\r\n  const [listOfProblems, setListOfProblems] = useState([])\r\n  const [name, setName] = useState(\"\")\r\n  const [difficulty, setDifficulty] = useState(\"\")\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 3);\r\n  var defaultDate = curr.toISOString().substring(0,10);\r\n  const [date, setDate] = useState(defaultDate)\r\n  const [duration, setDuration] = useState(0)\r\n  const [attempts, setAttempts] = useState(\"\")\r\n  const [completed, setCompleted] = useState(\"\")  \r\n\r\n  // retrieve data from MongoDB\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getProblems\").then((response) => {\r\n      setListOfProblems(response.data)\r\n    });\r\n  }, [])\r\n\r\n  // functions\r\n  const createProblem = () => {\r\n    Axios.post(\"http://localhost:3001/createProblem\", {\r\n      name, \r\n      difficulty, \r\n      date,\r\n      duration,\r\n      attempts,\r\n      completed,\r\n    }).then((response) => {\r\n      setListOfProblems([...listOfProblems, {\r\n        name, \r\n        difficulty, \r\n        date,\r\n        duration,\r\n        attempts,\r\n        completed,\r\n      }])\r\n    })\r\n  }\r\n\r\n\r\n  var easy = [];\r\n  var med = [];\r\n  var hard = [];\r\n  {listOfProblems.map((problem) => {\r\n    if (problem.difficulty == \"Easy\") {\r\n      easy.push(problem);\r\n    } else if (problem.difficulty == \"Medium\") {\r\n      med.push(problem);\r\n    } else {\r\n      hard.push(problem);\r\n    }\r\n  })};\r\n\r\n  var hash = {};\r\n  listOfProblems.forEach((problem) => {\r\n    if (problem.attempts in hash) {\r\n\r\n    } else {\r\n      hash['problems.attempts']\r\n    }\r\n  });\r\n\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Easy',\r\n        data: labels.map(() => easy.length),\r\n        backgroundColor: 'rgb(0, 255, 136)',\r\n      },\r\n      {\r\n        label: 'Medium',\r\n        data: labels.map(() => med),\r\n        backgroundColor: 'rgb(231, 168, 50)',\r\n      },\r\n      {\r\n        label: 'Hard',\r\n        data: labels.map(() => hard),\r\n        backgroundColor: 'red',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <div id='chart'><Bar options={options} data={data} /></div>;\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}