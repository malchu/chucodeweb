{"ast":null,"code":"import React, { useContext, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { parseMetricToNum } from '../../utils';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nvar StyledBadgeContainer = styled(Box).withConfig({\n  displayName: \"Badge__StyledBadgeContainer\",\n  componentId: \"sc-1es4ws1-0\"\n})([\"\", \"\"], function (props) {\n  return props.theme.button.badge.container.extend;\n});\nexport var Badge = function Badge(_ref) {\n  var children = _ref.children,\n    content = _ref.content;\n  var theme = useContext(ThemeContext);\n  var contentRef = useRef();\n  var stackRef = useRef();\n  var defaultBadgeDimension = typeof content === 'boolean' || content && content.value && typeof content.value === 'boolean' ?\n  // empty badge should be smaller. this value was chosen as a default\n  // after experimenting with various values\n  parseMetricToNum(theme.button.badge.size.medium) / 2 + \"px\" : theme.button.badge.size.medium;\n\n  // size should drive height, match width to height by default\n  // allow width to grow when content is wide\n  var _useState = useState(defaultBadgeDimension),\n    height = _useState[0],\n    setHeight = _useState[1];\n  var _useState2 = useState(height),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n\n  // scale badge to fit its contents, leaving space horizontally\n  // that is proportional to vertical space\n  useLayoutEffect(function () {\n    // when window resizes and hits a responsive breakpoint, width of the badge\n    // can change (because pad is responsive, etc.). we want to recalculate\n    // width since badge offset is reliant on its dimensions.\n    var onResize = function onResize() {\n      if (contentRef && contentRef.current) {\n        if (typeof content === 'number' || typeof content === 'object' && content.value) {\n          var _contentRef$current$g = contentRef.current.getBoundingClientRect(),\n            contentHeight = _contentRef$current$g.height,\n            contentWidth = _contentRef$current$g.width;\n\n          // only adjust the width if contentHeight > 0\n          // jest returns 0 for all getBoundingClientRect values,\n          // so this ensures snapshots are closer to correct values\n          if (contentHeight) {\n            // height of content includes extra space around font from\n            // line-height. account for this extra space with 2.5 multiplier\n            // to add proportional horizontal space\n            var verticalSpace = (parseMetricToNum(height) - contentHeight) * 2.5;\n            setWidth(Math.max(parseMetricToNum(width), Math.ceil(contentWidth + verticalSpace)) + \"px\");\n          }\n        } else {\n          // caller has provided custom JSX\n          setWidth(contentRef.current.getBoundingClientRect().width + \"px\");\n          setHeight(contentRef.current.getBoundingClientRect().height + \"px\");\n        }\n      }\n    };\n    window.addEventListener('resize', onResize);\n    onResize();\n    return function () {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [content, height, width]);\n\n  // offset the badge so it overlaps content\n  useLayoutEffect(function () {\n    if (stackRef && stackRef.current) {\n      // when badge has content, offset should be 50%.\n      // when badge is empty, offset by a smaller amount to keep the badge\n      // closer to the content. this value was chosen as a reasonable default\n      // after testing with various grommet icons.\n      var divisor = typeof content === 'boolean' || content && content.value === true ? 3.5 : 2;\n      var offset = {\n        right: \"-\" + Math.round(parseMetricToNum(width) / divisor) + \"px\",\n        top: \"-\" + Math.round(parseMetricToNum(height) / divisor) + \"px\"\n      };\n      // second child of Stack is the div that receives absolute positioning\n      // and contains our badge content\n      stackRef.current.children[1].style.top = offset.top;\n      stackRef.current.children[1].style.right = offset.right;\n    }\n  }, [content, height, width]);\n  var value;\n  if (typeof content === 'number') value = content;else if (typeof content === 'object') value = content.value;\n  var badge;\n  if (typeof value === 'number' || typeof value === 'boolean' || typeof content === 'boolean') {\n    if (typeof value === 'number') {\n      var max = content.max || 9;\n      badge = /*#__PURE__*/React.createElement(Text, {\n        color: \"text-strong\",\n        size: theme.button.badge.text.size.medium,\n        weight: \"normal\",\n        ref: contentRef\n      }, value > max ? max + \"+\" : value);\n    }\n    badge = /*#__PURE__*/React.createElement(StyledBadgeContainer, {\n      align: \"center\",\n      background: content.background || theme.button.badge.container.background,\n      flex: false,\n      height: {\n        min: height\n      },\n      justify: \"center\",\n      round: true,\n      pad: !(typeof value === 'boolean' || typeof content === 'boolean') ? theme.button.badge.container.pad : undefined,\n      width: {\n        min: width\n      }\n    }, badge);\n    // caller has provided their own JSX and we will just render that\n  } else badge = /*#__PURE__*/React.createElement(Box, {\n    ref: contentRef\n  }, content);\n  return /*#__PURE__*/React.createElement(Stack, {\n    ref: stackRef,\n    anchor: \"top-right\"\n  }, children, badge);\n};","map":{"version":3,"names":["React","useContext","useRef","useState","styled","ThemeContext","parseMetricToNum","useLayoutEffect","Box","Stack","Text","StyledBadgeContainer","withConfig","displayName","componentId","props","theme","button","badge","container","extend","Badge","_ref","children","content","contentRef","stackRef","defaultBadgeDimension","value","size","medium","_useState","height","setHeight","_useState2","width","setWidth","onResize","current","_contentRef$current$g","getBoundingClientRect","contentHeight","contentWidth","verticalSpace","Math","max","ceil","window","addEventListener","removeEventListener","divisor","offset","right","round","top","style","createElement","color","text","weight","ref","align","background","flex","min","justify","pad","undefined","anchor"],"sources":["C:/Users/malch/OneDrive/Documents/Projects/chucode/node_modules/grommet/es6/components/Button/Badge.js"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { parseMetricToNum } from '../../utils';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nvar StyledBadgeContainer = styled(Box).withConfig({\n  displayName: \"Badge__StyledBadgeContainer\",\n  componentId: \"sc-1es4ws1-0\"\n})([\"\", \"\"], function (props) {\n  return props.theme.button.badge.container.extend;\n});\nexport var Badge = function Badge(_ref) {\n  var children = _ref.children,\n    content = _ref.content;\n  var theme = useContext(ThemeContext);\n  var contentRef = useRef();\n  var stackRef = useRef();\n  var defaultBadgeDimension = typeof content === 'boolean' || content && content.value && typeof content.value === 'boolean' ? // empty badge should be smaller. this value was chosen as a default\n  // after experimenting with various values\n  parseMetricToNum(theme.button.badge.size.medium) / 2 + \"px\" : theme.button.badge.size.medium;\n\n  // size should drive height, match width to height by default\n  // allow width to grow when content is wide\n  var _useState = useState(defaultBadgeDimension),\n    height = _useState[0],\n    setHeight = _useState[1];\n  var _useState2 = useState(height),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n\n  // scale badge to fit its contents, leaving space horizontally\n  // that is proportional to vertical space\n  useLayoutEffect(function () {\n    // when window resizes and hits a responsive breakpoint, width of the badge\n    // can change (because pad is responsive, etc.). we want to recalculate\n    // width since badge offset is reliant on its dimensions.\n    var onResize = function onResize() {\n      if (contentRef && contentRef.current) {\n        if (typeof content === 'number' || typeof content === 'object' && content.value) {\n          var _contentRef$current$g = contentRef.current.getBoundingClientRect(),\n            contentHeight = _contentRef$current$g.height,\n            contentWidth = _contentRef$current$g.width;\n\n          // only adjust the width if contentHeight > 0\n          // jest returns 0 for all getBoundingClientRect values,\n          // so this ensures snapshots are closer to correct values\n          if (contentHeight) {\n            // height of content includes extra space around font from\n            // line-height. account for this extra space with 2.5 multiplier\n            // to add proportional horizontal space\n            var verticalSpace = (parseMetricToNum(height) - contentHeight) * 2.5;\n            setWidth(Math.max(parseMetricToNum(width), Math.ceil(contentWidth + verticalSpace)) + \"px\");\n          }\n        } else {\n          // caller has provided custom JSX\n          setWidth(contentRef.current.getBoundingClientRect().width + \"px\");\n          setHeight(contentRef.current.getBoundingClientRect().height + \"px\");\n        }\n      }\n    };\n    window.addEventListener('resize', onResize);\n    onResize();\n    return function () {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [content, height, width]);\n\n  // offset the badge so it overlaps content\n  useLayoutEffect(function () {\n    if (stackRef && stackRef.current) {\n      // when badge has content, offset should be 50%.\n      // when badge is empty, offset by a smaller amount to keep the badge\n      // closer to the content. this value was chosen as a reasonable default\n      // after testing with various grommet icons.\n      var divisor = typeof content === 'boolean' || content && content.value === true ? 3.5 : 2;\n      var offset = {\n        right: \"-\" + Math.round(parseMetricToNum(width) / divisor) + \"px\",\n        top: \"-\" + Math.round(parseMetricToNum(height) / divisor) + \"px\"\n      };\n      // second child of Stack is the div that receives absolute positioning\n      // and contains our badge content\n      stackRef.current.children[1].style.top = offset.top;\n      stackRef.current.children[1].style.right = offset.right;\n    }\n  }, [content, height, width]);\n  var value;\n  if (typeof content === 'number') value = content;else if (typeof content === 'object') value = content.value;\n  var badge;\n  if (typeof value === 'number' || typeof value === 'boolean' || typeof content === 'boolean') {\n    if (typeof value === 'number') {\n      var max = content.max || 9;\n      badge = /*#__PURE__*/React.createElement(Text, {\n        color: \"text-strong\",\n        size: theme.button.badge.text.size.medium,\n        weight: \"normal\",\n        ref: contentRef\n      }, value > max ? max + \"+\" : value);\n    }\n    badge = /*#__PURE__*/React.createElement(StyledBadgeContainer, {\n      align: \"center\",\n      background: content.background || theme.button.badge.container.background,\n      flex: false,\n      height: {\n        min: height\n      },\n      justify: \"center\",\n      round: true,\n      pad: !(typeof value === 'boolean' || typeof content === 'boolean') ? theme.button.badge.container.pad : undefined,\n      width: {\n        min: width\n      }\n    }, badge);\n    // caller has provided their own JSX and we will just render that\n  } else badge = /*#__PURE__*/React.createElement(Box, {\n    ref: contentRef\n  }, content);\n  return /*#__PURE__*/React.createElement(Stack, {\n    ref: stackRef,\n    anchor: \"top-right\"\n  }, children, badge);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}